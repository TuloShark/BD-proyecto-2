version: '3'

services:
  py01_docker_rest_api:
    container_name: py01_docker_rest_api
    build: .
    environment:
      SECRET_KEY: B!1w8*NAt1T^%kvhUI*s^
      JWT_KEY: D5*F?_1?-d$f*1
      DATABASE_HOST: python_database
      DATABASE_NAME: surveys
      DATABASE_USER: postgres
      DATABASE_PASSWORD: mysecretpassword
      DATABASE_PORT: "5432"
      MONGO_INITDB_ROOT_USERNAME: wandertulojimenez
      MONGO_INITDB_ROOT_PASSWORD: Esy9UlXjfIoBVn7v
      MONGO_DATABASE_HOST: mongo
      MONGO_DATABASE_PORT: 27017
      MONGO_DATABASE_NAME: ProyectoBases2
      MONGO_COLLECTION_NAME: surveys
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092  
    ports:
      - "5002:5000"
    depends_on:
      - python_database
      - mongo
      - redis
      - kafka  
    networks:
      - web

  python_database:
    container_name: python_database
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    networks:
      - web
    volumes:
      - ./src/data/:/docker-entrypoint-initdb.d/

  mongo:
    container_name: mongo
    image: mongo:7.0.8
    environment:
      MONGO_INITDB_ROOT_USERNAME: wandertulojimenez
      MONGO_INITDB_ROOT_PASSWORD: Esy9UlXjfIoBVn7v
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - web

  redis:
    container_name: redis
    image: redis:7.2.4
    ports:
      - "6379:6379"
    networks:
      - web

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - web

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - web
 
networks:
  web:
    driver: bridge

volumes:
  mongo_data:
