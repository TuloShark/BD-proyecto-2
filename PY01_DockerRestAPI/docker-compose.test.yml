version: '3'

services:
  py01_docker_rest_api_test:
    container_name: py01_docker_rest_api_test
    build: .
    environment:
      SECRET_KEY: B!1w8*NAt1T^%kvhUI*s^
      JWT_KEY: D5*F?_1?-d$f*1
      DATABASE_HOST: python_database_test
      DATABASE_NAME: surveys
      DATABASE_USER: postgres
      DATABASE_PASSWORD: mysecretpassword
      DATABASE_PORT: "5432"
      MONGO_INITDB_ROOT_USERNAME: wandertulojimenez
      MONGO_INITDB_ROOT_PASSWORD: Esy9UlXjfIoBVn7v
      MONGO_DATABASE_HOST: mongo_test
      MONGO_DATABASE_PORT: 27017
      MONGO_DATABASE_NAME: ProyectoBases2
      DOCKER_HOST: py01_docker_rest_api_test
      DOCKER_PORT: "5000"
      REDIS_HOST: redis_test
      REDIS_PORT: "6379"
    ports:
      - "5002:5000"
    depends_on:
      - python_database_test
      - mongo_test
      - redis_test
    networks:
      - web_test

  python_database_test:
    container_name: python_database_test
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5432:5432"
    networks:
      - web_test
    volumes:
      - ./src/data/:/docker-entrypoint-initdb.d/

  mongo_test:
    container_name: mongo_test
    image: mongo:7.0.8
    environment:
      MONGO_INITDB_ROOT_USERNAME: wandertulojimenez
      MONGO_INITDB_ROOT_PASSWORD: Esy9UlXjfIoBVn7v
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - web_test

  redis_test:
    container_name: redis_test
    image: redis:7.2.4
    ports:
      - "6379:6379"
    networks:
      - web_test

  tests:
    image:  py01_dockerrestapi-py01_docker_rest_api:latest  # Usa la misma imagen que tu aplicaci√≥n
    working_dir: /opt/app/src/tests  # Establece el directorio de trabajo en el directorio de pruebas
    environment:
      DOCKER_HOST: py01_docker_rest_api_test
      DOCKER_PORT: "5000"
    depends_on:
      - py01_docker_rest_api_test
      - python_database_test
      - mongo_test
      - redis_test
    command: pytest --disable-warnings test_index.py test_auth.py test_user.py test_surveys.py test_questions.py test_responses.py test_respondents.py test_analysis.py # Comando para ejecutar las pruebas
    networks:
      - web_test

networks:
  web_test:
    driver: bridge

volumes:
  mongo_data:





